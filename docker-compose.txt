services:

  billing-api:
    container_name: billing-api
    image: billing-api
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8181:8181"
    environment:
      SPRING_APPLICATION_JSON: '{
              "spring.datasource.url": "jdbc:mysql://billing-db:3307/billing-docker?useSSL=false&createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true",
              "spring.datasource.username": "root",
              "spring.datasource.password": "admin",
              "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQL8Dialect",
              "spring.datasource.driver-class-name": "com.mysql.cj.jdbc.Driver",
              "spring.jpa.hibernate.ddl-auto" : "create"
            }'
    networks:
      - spring-network
    depends_on:
      - billing-db
    volumes:
      - /billing-volume

  billing-db:
    container_name: billing-db
    image: mysql:8.0.33
    restart: always
    ports:
      - "3307:3307"
    environment:
      MYSQL_DATABASE: billing-docker
      #MYSQL_USER: root
      MYSQL_PASSWORD: admin
      MYSQL_ROOT_PASSWORD: root
      MYSQL_ALLOW_EMPTY_PASSWORD: YES

    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      retries: 10
      interval: 3s
      timeout: 30s
    networks:
      - spring-network
networks:
  spring-network:
    name: springboot-mysql-network
    driver: bridge
